union NumberData {
    bit   i1
    byte  i8
    short i16
    int   i32
    long  i64
}

BIT := 0 as i8
BYTE := 1 as i8
SHORT := 2 as i8
INT := 3 as i8
LONG := 4 as i8

struct Number {
    kind i8
    data NumberData
}

func newInteger(integer i32) Number {
    return @Number{
        kind: INT,
        data: integer,
    }
}

func newByte(byte i8) Number {
    return @Number{
        kind: BYTE,
        data: byte,
    }
} 

// etc...

func main() {
    integer := newInteger(10);
    if integer.kind != INT {
        @print("NOOO")
    }
    if integer.data.int != 10 { @print("NOOO (as well).")}
}