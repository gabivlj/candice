// ./program  13.48s user 0.90s system 94% cpu 15.224 total
func main() {
    for i := 0; i < 500; ++i {
        root := new_tree(20);
        p := count(root)
    }
}

struct Tree {
    Left *Tree
    Right *Tree
}

func count(t *Tree) i32 {
    if t.Left as i64 == 0 as i64 {
        return 1;
    }
    return 1 + count(t.Left) + count(t.Right)
}

func new_tree(depth i32) *Tree {
    if depth > 0 {
        t := @alloc(Tree, 1);
        t.Left = new_tree(depth - 1);
        t.Right = new_tree(depth - 1);
        return t
    }
    return 0 as *Tree;
}
